/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import br.com.easysoftware.Ean;
import controllers.ControllerGerador;
import java.awt.Color;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.net.URL;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import models.ModelEmpresa;
import models.ModelProduto;

/**
 *
 * @author Rodrigo
 */
public final class Gerador extends javax.swing.JFrame {

    private static final Point point = new Point();

    /**
     * Creates new form Gerador
     */
    public Gerador() {
        initComponents();
        URL url = this.getClass().getResource("/icons/icons8_barcode_scanner_30px.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                point.x = e.getX();
                point.y = e.getY();
            }
        });
        addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point p = getLocation();
                setLocation(p.x + e.getX() - point.x, p.y + e.getY() - point.y);
            }
        });

        comboboxEmpresas(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jbFechar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jpbProgresso = new javax.swing.JProgressBar();
        jcbReescreverBarras = new javax.swing.JCheckBox();
        jcbExecutarForaDeLinha = new javax.swing.JCheckBox();
        jcbFiltrarSeqProdutos = new javax.swing.JCheckBox();
        jtfSeqInicial = new javax.swing.JTextField();
        jtfSeqFinal = new javax.swing.JTextField();
        jlInfoProgresso = new javax.swing.JLabel();
        jcbEmpresas = new javax.swing.JComboBox<ModelEmpresa>();
        jLabel4 = new javax.swing.JLabel();
        jbExecutar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 215));
        setMinimumSize(new java.awt.Dimension(400, 215));
        setName("Gerador BarCode"); // NOI18N
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(400, 215));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(166, 102, 102)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        jPanel3.setPreferredSize(new java.awt.Dimension(381, 25));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbFechar.setBackground(new java.awt.Color(102, 153, 255));
        jbFechar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jbFechar.setForeground(new java.awt.Color(0, 102, 153));
        jbFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_close_window_20px_1.png"))); // NOI18N
        jbFechar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        jbFechar.setBorderPainted(false);
        jbFechar.setContentAreaFilled(false);
        jbFechar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbFechar.setFocusPainted(false);
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });
        jPanel3.add(jbFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 0, 27, 24));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(251, 251, 251));
        jLabel2.setText("Gerador Barcode - Windel");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 24));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(251, 251, 251));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Background-GeradorBarcode.png"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 24));

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpbProgresso.setBackground(new java.awt.Color(250, 250, 250));
        jpbProgresso.setForeground(new java.awt.Color(102, 153, 255));
        jpbProgresso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 3));
        jpbProgresso.setString("");
        jpbProgresso.setStringPainted(true);
        jPanel1.add(jpbProgresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 380, 10));

        jcbReescreverBarras.setBackground(new java.awt.Color(250, 250, 250));
        jcbReescreverBarras.setText("Reescrever barras existentes");
        jcbReescreverBarras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbReescreverBarras.setFocusPainted(false);
        jPanel1.add(jcbReescreverBarras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jcbExecutarForaDeLinha.setBackground(new java.awt.Color(250, 250, 250));
        jcbExecutarForaDeLinha.setText("Executar em produtos fora de linha");
        jcbExecutarForaDeLinha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbExecutarForaDeLinha.setFocusPainted(false);
        jPanel1.add(jcbExecutarForaDeLinha, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, 20));

        jcbFiltrarSeqProdutos.setBackground(new java.awt.Color(250, 250, 250));
        jcbFiltrarSeqProdutos.setText("Filtrar sequência de produtos:");
        jcbFiltrarSeqProdutos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbFiltrarSeqProdutos.setFocusPainted(false);
        jcbFiltrarSeqProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltrarSeqProdutosActionPerformed(evt);
            }
        });
        jPanel1.add(jcbFiltrarSeqProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 20));

        jtfSeqInicial.setBackground(new java.awt.Color(240, 240, 240));
        jtfSeqInicial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfSeqInicial.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 153, 255)));
        jtfSeqInicial.setEnabled(false);
        jtfSeqInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSeqInicialKeyTyped(evt);
            }
        });
        jPanel1.add(jtfSeqInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 59, 20));

        jtfSeqFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfSeqFinal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 153, 255)));
        jtfSeqFinal.setEnabled(false);
        jtfSeqFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSeqFinalKeyTyped(evt);
            }
        });
        jPanel1.add(jtfSeqFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 59, 20));

        jlInfoProgresso.setForeground(new java.awt.Color(102, 153, 255));
        jPanel1.add(jlInfoProgresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 240, 20));

        jcbEmpresas.setEditable(true);
        jcbEmpresas.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 153, 255)));
        jcbEmpresas.setOpaque(false);
        jcbEmpresas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcbEmpresasKeyTyped(evt);
            }
        });
        jPanel1.add(jcbEmpresas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 380, -1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("até");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 30, 20));

        jbExecutar.setBackground(new java.awt.Color(102, 153, 255));
        jbExecutar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jbExecutar.setForeground(new java.awt.Color(0, 102, 153));
        jbExecutar.setText("Executar");
        jbExecutar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        jbExecutar.setContentAreaFilled(false);
        jbExecutar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExecutarActionPerformed(evt);
            }
        });
        jPanel1.add(jbExecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 60, 25));

        jLabel5.setText("Empresa:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 20));

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jcbFiltrarSeqProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltrarSeqProdutosActionPerformed
        if (jcbFiltrarSeqProdutos.isSelected()) {
            jtfSeqInicial.setEnabled(true);
            jtfSeqInicial.setBackground(new Color(255, 255, 255));
            jtfSeqFinal.setEnabled(true);
            jtfSeqFinal.setBackground(new Color(255, 255, 255));
        } else {
            jtfSeqInicial.setEnabled(false);
            jtfSeqInicial.setBackground(new Color(240, 240, 240));
            jtfSeqFinal.setEnabled(false);
            jtfSeqFinal.setBackground(new Color(240, 240, 240));
        }
    }//GEN-LAST:event_jcbFiltrarSeqProdutosActionPerformed

    private void jtfSeqFinalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSeqFinalKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfSeqFinalKeyTyped

    private void jtfSeqInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSeqInicialKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfSeqInicialKeyTyped

    private void jbExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExecutarActionPerformed

        new Thread(() -> {
            try {
                executar();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Problemas ao executar ações, motivo:\n"
                        + ex.getMessage());
            }
        }).start();

    }//GEN-LAST:event_jbExecutarActionPerformed

    private void jcbEmpresasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbEmpresasKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jcbEmpresasKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbExecutar;
    private javax.swing.JButton jbFechar;
    private javax.swing.JComboBox<ModelEmpresa> jcbEmpresas;
    private javax.swing.JCheckBox jcbExecutarForaDeLinha;
    private javax.swing.JCheckBox jcbFiltrarSeqProdutos;
    private javax.swing.JCheckBox jcbReescreverBarras;
    public static javax.swing.JLabel jlInfoProgresso;
    private javax.swing.JProgressBar jpbProgresso;
    private javax.swing.JTextField jtfSeqFinal;
    private javax.swing.JTextField jtfSeqInicial;
    // End of variables declaration//GEN-END:variables

    private void executar() throws SQLException, InterruptedException {
        ModelEmpresa empresa = (ModelEmpresa) jcbEmpresas.getSelectedItem();
        StringBuilder query = new StringBuilder();
        query.append("SELECT IDEMPRESA, IDPRODUTO, COALESCE(BARRAS, '') AS BARRAS, ");
        query.append("DESCRICAO, COALESCE(FORADELINHA, 'N') AS FORADELINHA FROM PRODUTOS ");
        query.append("WHERE IDEMPRESA = '").append(empresa.getIdEmpresa()).append("' ");

        if (jcbExecutarForaDeLinha.isSelected()) {
            query.append("AND FORADELINHA = 'S' ");
        } else {
            query.append("AND FORADELINHA = 'N' ");
        }
        
        if (jcbFiltrarSeqProdutos.isSelected()) {
            query.append("AND IDPRODUTO BETWEEN ");
            query.append(Integer.valueOf(jtfSeqInicial.getText()));
            query.append(" AND ");
            query.append(Integer.valueOf(jtfSeqFinal.getText())).append(" ");
        }

        if (!jcbReescreverBarras.isSelected()) {
            query.append("AND COALESCE(BARRAS, '') = '' or (BARRAS IS NULL ");
            if (jcbFiltrarSeqProdutos.isSelected()) {
                query.append("AND IDPRODUTO BETWEEN ");
                query.append(Integer.valueOf(jtfSeqInicial.getText()));
                query.append(" AND ");
                query.append(Integer.valueOf(jtfSeqFinal.getText())).append(" ");
            }
            query.append(") ");
        }

        jbExecutar.setEnabled(false);
        jpbProgresso.setIndeterminate(true);

        System.out.println("# OBTENDO PRODUTOS DO SISTEMA");
        System.out.println("# QUERY: " + query.toString());
        List<ModelProduto> produtos = new ControllerGerador().getProdutos(query);
        jpbProgresso.setIndeterminate(false);
        int totalProgresso = produtos.size() * 2;
        int atualProgresso = 0;
        setInfoProgresso(totalProgresso, atualProgresso);
        jpbProgresso.setMaximum(totalProgresso);

        System.out.println("# ");
        System.out.println("# ATUALIZANDO CÓDIGOS DE BARRAS, AGUARDE...");
        for (ModelProduto produto : produtos) {
            jpbProgresso.setValue(atualProgresso);
            atualProgresso++;
            setInfoProgresso(totalProgresso, atualProgresso);
            try {
                int codigo = Integer.valueOf(produto.getIdProduto());
                String EAN13 = Ean.calculaDigEan12("789" + String.format("%09d", codigo));
                produto.setBarras(EAN13);
            } catch (Exception ex) {
                System.out.println("# NÃO FOI POSSÍVEL ATUALIZAR BARRAS");
                System.out.println("# " + produto.toString());
                System.out.println("# ERRO: \n" + ex.getMessage());
            }
        }

        System.out.println("# ");
        System.out.println("# INSERINDO CÓDIGOS NOS CADASTROS, AGUARDE...");
        new ControllerGerador().setProdutos(produtos, jpbProgresso, atualProgresso, totalProgresso);
        jpbProgresso.setMaximum(100);
        jpbProgresso.setValue(100);
        JOptionPane.showMessageDialog(this, "Sucesso ao realizar operação!");
        jlInfoProgresso.setText("");
        jbExecutar.setEnabled(true);
        Thread.sleep(2000);
        jpbProgresso.setValue(0);
    }

    public void comboboxEmpresas(int id) {
        jcbEmpresas.removeAllItems();
        List<ModelEmpresa> empresas = new ControllerGerador().getEmpresas();
        empresas.stream().map((n) -> {
            jcbEmpresas.addItem(n);
            return n;
        }).filter((n) -> (Integer.valueOf(n.getIdEmpresa()) == id)).forEach((n) -> {
            jcbEmpresas.setSelectedItem(n);
        });
    }
    
    public static void setInfoProgresso(int total, int atual) {
        jlInfoProgresso.setText("Executando " +atual+ " de "+total+" processos, aguarde...");
    }
}
